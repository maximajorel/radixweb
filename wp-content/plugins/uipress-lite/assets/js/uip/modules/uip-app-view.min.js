export function moduleData(){return{props:{},inject:["uipData","router","uipress"],data:function(){return{template:{display:"prod",settings:this.formatTemplate(uipUserTemplate.settings),content:this.formatTemplate(uipUserTemplate.content),globalSettings:this.formatTemplate(uipUserTemplate.settings),id:uipUserTemplate.id,styles:uipUserStyles},loading:!0}},provide(){return{uiTemplate:this.template}},mounted:function(){let t=this;setTimeout(function(){t.loading=!1},400)},computed:{returnTemplateJS(){if(void 0!==this.template.globalSettings.options)return"advanced"in this.template.globalSettings.options&&"js"in this.template.globalSettings.options.advanced?this.template.globalSettings.options.advanced.js:void 0},returnTemplateCSS(){if(void 0!==this.template.globalSettings.options)return"advanced"in this.template.globalSettings.options&&"css"in this.template.globalSettings.options.advanced?this.template.globalSettings.options.advanced.css:void 0}},methods:{formatTemplate(t){return this.uipress.uipParsJson(JSON.stringify(t))},componentExists(t){return!!this.$root._.appContext.components[t]}},template:'\n    <component is="style" scoped >\n    .uip-user-frame:not(.uip-app-frame){\n    <template v-for="(item, index) in template.styles">\n      <template v-if="item.value">{{index}}:{{item.value}};</template>\n    </template>\n    }\n    [data-theme="dark"] :not(.uip-app-frame) *{\n    <template v-for="(item, index) in template.styles">\n      <template v-if="item.darkValue"> {{index}}:{{item.darkValue}};</template>\n    </template>\n    }\n    {{returnTemplateCSS}}\n    </component>\n    <component is="script" scoped>\n      {{returnTemplateJS}}\n    </component>\n    <uip-content-area :content="template.content" :returnData="function(data) {template.content = data} " v-if="!loading"></uip-content-area>\n    <div v-if="loading" class="uip-flex uip-flex-center uip-flex-middle uip-w-100p uip-h-100p"><loading-chart></loading-chart></div>\n    \x3c!--Import plugins --\x3e    <template v-for="plugin in uipData.plugins">      <component v-if="componentExists(plugin.component) && plugin.loadInApp"" :is="plugin.component"></component>    </template>    \x3c!-- end plugin import --\x3e'}};