export function moduleData(){return{props:{selected:Array,placeHolder:String,searchPlaceHolder:String,single:Boolean,updateSelected:Function},data:function(){return{loading:!1,thisSearchInput:"",options:[],selectedOptions:this.selected,ui:{dropOpen:!1}}},inject:["uipress"],computed:{formattedOptions(){return this.options}},watch:{selectedOptions:{handler(t,e){},deep:!0},thisSearchInput:function(t,e){if(self=this,""==t)return;let i=new FormData;i.append("action","uip_get_user_roles"),i.append("security",uip_ajax.security),i.append("searchString",t),self.loading=!0,self.uipress.callServer(uip_ajax.ajax_url,i).then(t=>{self.loading=!1,t.error?self.uipress.notify(t.error,"error"):self.options=t.roles})}},methods:{addSelected(t){this.ifSelected(t)?this.removeSelected(t):1==this.single?this.selectedOptions[0]=t:this.selectedOptions.push(t)},removeSelected(t){let e=this.selectedOptions.findIndex(e=>e.name===t.name&&e.type===t.type);e>-1&&this.selectedOptions.splice(e,1)},removeByIndex(t){this.selectedOptions.splice(t,1)},ifSelected(t){return this.selectedOptions.findIndex(e=>e.name===t.name&&e.type===t.type)>-1},ifInSearch(t,e){let i=t.name.toLowerCase(),n=e.toLowerCase();return!!i.includes(n)},onClickOutside(t){const e=t.path||(t.composedPath?t.composedPath():void 0);!e||e.includes(this.$el)||this.$el.contains(t.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'\n    <div class="uip-position-relative" @click="openThisComponent">\n\t\t  <div class="uip-padding-xs uip-background-muted uip-border-round uip-w-100p uip-max-w-400 uip-cursor-pointer uip-border-box" :class="{\'uip-active-outline\' : ui.dropOpen}"> \n\t\t    <div class="uip-flex uip-flex-center">\n\t\t\t  <div class="uip-flex-grow uip-margin-right-s" v-if="selectedOptions.length < 1">\n\t\t\t    <div>\n\t\t\t\t  <span class="uk-text-meta">{{placeHolder}}...</span>\n\t\t\t    </div>\n\t\t\t  </div>\n        <div v-else class="uip-flex-grow uip-flex uip-flex-row uip-row-gap-xxs uip-gap-xxs uip-margin-right-s uip-flex-wrap">\n          <template v-for="(item, index) in selectedOptions">\n            <div class=" uip-padding-left-xxs uip-padding-right-xxs uip-background-primary-wash uip-border-round uip-flex uip-gap-xxs uip-flex-center">\n              <span class="uip-text-s">{{item.name}}</span>\n              <a @click="removeByIndex(index)" class="uip-link-muted uip-no-underline uip-icon uip-text-l">backspace</a>\n            </div>\n          </template>\n        </div>\n\t\t\t  <span class="uip-icon uip-text-muted">add</span>\n\t\t\t  <span v-if="selectedOptions.length > 0" class="uip-text-inverse uip-background-primary uip-border-round uip-text-s uip-w-18 uip-margin-left-xxs uip-text-center">\n\t\t\t    {{selectedOptions.length}}\n\t\t\t  </span>\n\t\t    </div>\n\t\t  </div>\n\t\t  <div v-if="ui.dropOpen" class="uip-position-absolute uip-background-default uip-border-round uip-border uip-w-100p uip-max-w-400 uip-border-box uip-z-index-9 uip-margin-top-xs uip-overflow-hidden">\n\t\t    <div class="uip-flex uip-background-default uip-padding-xs uip-border-bottom">\n\t\t\t  <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n\t\t\t  <input class="uip-blank-input uip-flex-grow" type="search"  \n\t\t\t  :placeholder="searchPlaceHolder" v-model="thisSearchInput" autofocus>\n\t\t    </div>\n\t\t    <div class="uip-max-h-280 uip-overflow-auto">\n        <div v-if="loading" class="uip-padding-s uip-flex uip-flex-center uip-flex-middle"><loading-chart></loading-chart></div>\n\t\t\t  <template v-if="!loading" v-for="option in formattedOptions">\n\t\t\t    <div class="uip-background-default uip-padding-xs hover:uip-background-muted" \n\t\t\t    @click="addSelected(option,)" \n\t\t\t    v-if="ifInSearch(option, thisSearchInput)" \n\t\t\t    style="cursor: pointer">\n\t\t\t\t  <div class="uip-flex uip-flex-row uip-flex-center">\n\t\t\t\t    <div class="uip-flex uip-flex-center uip-flex-middle uip-margin-right-xs">\n\t\t\t\t\t  <input type="checkbox" :name="option.name" :value="option.name" :checked="ifSelected(option)">\n\t\t\t\t    </div>\n\t\t\t\t    <div class="uip-flex-grow">\n\t\t\t\t\t  <div class="uip-text-bold uip-text-emphasis">{{option.label}}</div>\n\t\t\t\t\t  <div class="uip-text-muted">{{option.type}}</div>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t    </div>\n\t\t\t  </template>\n\t\t    </div>\n\t\t  </div>\n\t  </div>'}};