const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{content:Array,returnData:Function,layout:String,dropAreaStyle:String,contextualData:Object},data:function(){return{items:this.content,emptyMessage:__("Drag blocks here","uipress-lite"),footerhideen:!1,test:[1,2,6,5,3,8,9,4],activeTab:"blocks",drag:!1,strings:{doesntExist:__("This component is missing or can't be loaded","uipress-lite")},switchOptions:{blocks:{value:"blocks",label:__("Blocks","uipress-lite")},patterns:{value:"patterns",label:__("Patterns","uipress-lite")}}}},inject:["uipData","uiTemplate","router","uipress"],watch:{content:{handler(t,e){this.items=t},deep:!0},items:{handler(t,e){for(let t of this.items)0===Object.keys(t.settings).length&&this.uipress.inject_block_presets(t,t.settings)},deep:!0}},mounted:function(){},methods:{itemAdded(t){if(t.added){let e=JSON.parse(JSON.stringify(this.uiTemplate.content)),i=t.added.element;"uid"in i?this.uipress.logHistoryChange(t.added.element.name+" "+__("block moved","uipress-lite"),e,!1):(i.uid=this.uipress.createUID(),this.uipress.logHistoryChange(t.added.element.name+" "+__("block added","uipress-lite"),e,!1)),0===Object.keys(i.settings).length&&this.uipress.inject_block_presets(i,i.settings)}this.returnData(this.items)},setProdClasses(){return"vertical"==this.layout?"uip-flex uip-w-100p":"uip-flex uip-flex-row uip-w-100p"},setdropAreaStyles(){let t=[];return"vertical"==this.layout?t.class="uip-flex uip-w-100p":t.class="uip-flex uip-flex-row uip-w-100p",this.dropAreaStyle&&(t.style=this.dropAreaStyle),t},returnCardKey:t=>t.uid,returnDragStyle(){if(this.uiTemplate.drag)return"border-color:var(--uip-background-primary);"},componentExists(t){return!!this.$root._.appContext.components[t]}},template:'<div class="uip-border-round uip-border-dashed uip-h-100p uip-w-100p uip-flex uip-drop-area"\n\t  :style="returnDragStyle()" v-if="uiTemplate.display == \'builder\'">\n           \n\t\t\t<draggable \n      v-model="items" \n      :component-data="setdropAreaStyles()"\n      :group="{ name: \'uip-blocks\', pull: true, put: true }"\n      @start="uiTemplate.drag=true" \n      @end="uiTemplate.drag = false" \n      ghost-class="uip-block-ghost"\n      @change="itemAdded"\n      animation="300"\n      :sort="true"\n      item-key="uid">\n\t  \t\t\t<template #item="{element, index}">\n\t\t\t\t  \t\t  <uip-block-container display="builder" :block="element" :itemIndex="index" :currentContent="items">\n\t\t\t\t\t      \t<component v-if="componentExists(element.moduleName)" :is="element.moduleName" :contextualData="contextualData" :block="element" :name="element.name" display="builder" :id="element.uid"></component>\n                  <div v-if="!componentExists(element.moduleName)" class="uip-padding-xxs uip-border-round uip-background-red uip-text-inverse uip-text-s">\n                     {{strings.doesntExist}}\n                  </div>\n\t\t\t\t\t\t    </uip-block-container>\n\t  \t\t\t</template>\n\t\t\t\t\x3c!--FOOTER--\x3e\n\t\t\t\t<template #footer >\n            <div class="uip-flex uip-flex-center uip-flex-middle uip-flex-row">\n              <drop-down width="260" dropPos="right" :onOpen="function(){uiTemplate.activePath = []}">\n                <template v-slot:trigger>\n\t\t\t\t\t        <div  ref="footer" class="uip-text-muted uip-text-center uip-padding-xxs uip-text-center uip-icon  uip-text-l hover:uip-background-grey uip-cursor-pointer uip-border-circle" >add_circle</div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-s uip-max-w-300 uip-w-300 uip-max-h-300 uip-overflow-auto uip-scrollbar">\n                    <div class="uip-margin-bottom-xs">\n                     <toggle-switch :options="switchOptions" :activeValue="activeTab" :returnValue="function(data){ activeTab = data}"></toggle-switch>\n                    </div>\n                    <builder-blocks-list mode="click" v-if="activeTab == \'blocks\'" :insertArea="items"></builder-blocks-list>\n                    <patterns-list mode="click" :insertArea="items" v-if="activeTab == \'patterns\'"></patterns-list>\n                  </div>\n                </template>\n              </drop-down>\n            </div>\n\t\t\t\t</template>\n\t\t\t</draggable>\n\t    \t\n\t\t</div>\n\t\t<div class="uip-h-100p uip-w-100p uip-flex" v-if="uiTemplate.display == \'preview\'">\n\t\t  <div :class="setProdClasses()" :style="dropAreaStyle">\n\t\t  \t<template v-for="(element, index) in items">\n\t\t\t    <uip-block-container display="builder" :block="element" :itemIndex="index" :currentContent="items">\n\t\t\t\t\t  <component :contextualData="contextualData" :is="element.moduleName" :block="element" :name="element.name" display="builder" :id="element.uid"></component>\n\t\t\t\t  </uip-block-container>\n\t\t\t  </template>\n\t\t  </div>\n\t\t</div>'}};