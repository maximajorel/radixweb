const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{data:function(){return{loading:!1,globalSettings:{},ui:{strings:{siteSettings:__("Site settings","uipress-lite"),saveSettings:__("Save settings","uipress-lite"),settingsSaved:__("Settings saved","uipress-lite")}}}},inject:["uipData","router","uipress"],mounted:function(){this.loading=!1,this.getSettings()},watch:{"uiTemplate.globalSettings":{handler(i,t){},deep:!0},"uiTemplate.globalSettings":{handler(i,t){},deep:!0}},computed:{},methods:{getSettings(){let i=this;i.loading=!0;let t=new FormData;t.append("action","uip_get_global_settings"),t.append("security",uip_ajax.security),i.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{i.loading=!1,t.error?i.uipress.notify(t.message,"","error",!0):t.options&&i.uipress.isObject(t.options)&&Object.keys(t.options).length>0&&(i.globalSettings=t.options)})},returnTemplateOption(i,t){let e=t.uniqueKey,n=this.globalSettings;return i in n||(n[i]={}),e in n[i]||(t.accepts===String&&(n[i][e]=""),t.accepts===Array&&(n[i][e]=[]),t.accepts===Object&&(n[i][e]={}),t.accepts===Boolean&&(n[i][e]=!1)),n[i][e]},saveTemplateOption(i,t,e){this.globalSettings[i][t]=e},saveSettings(){let i=this,t=i.uipress.uipEncodeJson(i.globalSettings),e=new FormData;e.append("action","uip_save_global_settings"),e.append("security",uip_ajax.security),e.append("settings",t),i.uipress.callServer(uip_ajax.ajax_url,e).then(t=>{t.error?i.uipress.notify(t.message,"","error",!0):i.uipress.notify(i.ui.strings.settingsSaved,"","success",!0)})}},template:'\n      <div class="uip-flex uip-w-100p uip-h-100p">\n        <div class="uip-flex uip-flex-column uip-w-100p uip-max-h-100p uip-flex-no-wrap">\n        \n          <div class="uip-text-l uip-text-emphasis uip-padding-m uip-padding-remove-bottom">{{ui.strings.siteSettings}}</div>\n          \n          <div v-if="loading" class="uip-w-100p uip-flex uip-flex-middle uip-flex-center uip-padding-m"><loading-chart></loading-chart></div>\n          \n          <div class="uip-flex-grow uip-overflow-auto uip-flex uip-flex-column uip-row-gap-s uip-padding-m">\n            \x3c!-- Dynamic settings --\x3e\n            <template v-if="!loading" v-for="group in uipData.globalGroupOptions">\n              <accordion :openOnTick="false">\n                <template v-slot:title>\n                  <div class="uip-flex-grow uip-flex uip-gap-xxs uip-flex-center uip-text-bold">\n                    <div class="uip-icon">{{group.icon}}</div>\n                    <div class="">{{group.label}}</div>\n                  </div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-m">\n                    \x3c!--Loop through group settings --\x3e\n                    <div v-for="option in group.settings">\n                      <div class="uip-text-bold uip-margin-bottom-xxs">{{option.label}}</div>\n                      <div v-if="option.help" class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{option.help}}</div>\n                      <component :is="option.component" :value="returnTemplateOption(group.name, option)" :args="option.args"\n                      :returnData="function(data){saveTemplateOption(group.name, option.uniqueKey, data)}"></component>\n                    </div>\n                    \x3c!--End loop through group settings --\x3e\n                  </div>\n                </template>\n              </accordion>\n            </template>\n            \x3c!-- End dynamic settings --\x3e\n          </div>\n          \n          <div class="uip-flex uip-flex-right uip-padding-m">\n          \n            <button class="uip-button-primary" @click="saveSettings()">{{ui.strings.saveSettings}}</button>\n            \n          </div>\n          \n          \n        </div>\n      </div>'}};