const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{content:Array,returnData:Function,layout:String,dropAreaStyle:String},data:function(){return{items:this.content,emptyMessage:__("Drag blocks here","uipress-lite"),footerhideen:!1,drag:!1,activeBlock:this.returnActiveBlock}},inject:["uipData","uiTemplate","router","uipress"],watch:{content:{handler(t,e){this.items=t},deep:!0}},computed:{returnActiveBlock(){return"uid"in this.$route.params&&this.$route.params.uid}},methods:{itemAdded(t){if(t.added){let e=JSON.parse(JSON.stringify(this.uiTemplate.content)),i=t.added.element;"uid"in i?this.uipress.logHistoryChange(t.added.element.name+" "+__("block moved","uipress-lite"),e,!1):(i.uid=this.uipress.createUID(),this.uipress.logHistoryChange(t.added.element.name+" "+__("block added","uipress-lite"),e,!1)),0===Object.keys(i.settings).length&&(console.log(),this.uipress.inject_block_presets(i,i.settings))}this.returnData(this.items)},setdropAreaStylees(){let t=[];return t.class="uip-flex uip-flex-column uip-row-gap-xxs uip-w-100p",this.dropAreaStyle&&(t.style=this.dropAreaStyle,console.log(this.dropAreaStyle)),t},returnCardKey:t=>t.uid,returnDragStyle(){if(this.uiTemplate.drag)return"border-color:var(--uip-background-primary);"},openSettings(t){let e=this.$route.params.templateID;this.router.push("/uibuilder/"+e+"/settings/blocks/"+t)},isActive(t){return"uid"in this.$route.params&&this.$route.params.uid==t},buildClasses(t){let e="uip-border-round uip-padding-xxs";return this.isActive(t)?e+=" uip-background-primary-wash uip-text-bold":e+=" uip-no-background hover:uip-background-muted",e}},template:'<div class="uip-border-round uip-h-100p uip-w-100p uip-flex uip-drop-area"\n\t  :style="returnDragStyle()" :class="{\'uip-drop-hightlight\' : uiTemplate.drag}">\n           \n\t\t\t<draggable \n\t  \t\tv-model="items" \n\t\t\t  :component-data="setdropAreaStylees()"\n\t  \t\t:group="{ name: \'uip-blocks\', pull: true, put: true }"\n\t  \t\t@start="uiTemplate.drag=true" \n\t  \t\t@end="uiTemplate.drag = false" \n        @change="itemAdded"\n\t\t\t  ghost-class="uip-block-ghost"\n        handle=".uip-block-drag"\n        animation="300"\n\t\t\t  :sort="true"\n\t  \t\titem-key="uid">\n\t  \t\t\t<template #item="{element, index}">\n        \n            <accordion :openOnTick="true" :startOpen="element.tabOpen" :titleClass="buildClasses(element.uid)">\n              <template v-slot:title class="uip-text-bold uip-flex-grow">\n                <div class="uip-flex ui-flex-middle uip-flex-center uip-gap-xxs" style="min-width:140px">\n                  <drop-down dropPos="left" >\n                    <template v-slot:trigger>\n                        <div class="uip-icon uip-icon-small-emphasis uip-padding-xxxs uip-border-round hover:uip-background-grey uip-cursor-pointer uip-flex-no-grow ">\n                          more_vert\n                        </div>\n                    </template>\n                    <template v-slot:content>\n                      <div class="uip-padding-xxs">\n                        <block-actions :block="element" :parentList="items" :currentIndex="index" :reverse="true"></block-actions>\n                      </div>\n                    </template>\n                  </drop-down>\n                  <div class="uip-cursor-pointer uip-background-muted uip-icon uip-icon-small-emphasis uip-border-round uip-block-drag">drag_indicator</div>\n                  <div class="uip-cursor-pointer uip-icon uip-icon-small-emphasis" @click="openSettings(element.uid)">{{element.icon}}</div>\n                  <div class="uip-cursor-pointer uip-flex-grow uip-text-s" @click="openSettings(element.uid)">{{element.name}}</div>\n                </div>\n              </template>\n              <template v-if="element.content" v-slot:content>\n                <div class="uip-margin-left-s uip-margin-bottom-s">\n                  <uip-treeview-drop-area :content="element.content" :returnData="function(data){element.content = data}" ></uip-treeview-drop-area>\n                </div>\n              </template>\n            </accordion>\n          \n\t  \t\t\t</template>\n\t\t\t\t\x3c!--FOOTER--\x3e\n\t\t\t\t<template #footer v-if="uiTemplate.drag && items.length < 1">\n            <div class="uip-flex uip-flex-center uip-flex-middle uip-flex-row ">\n\t\t\t\t\t    <div  ref="footer" class="uip-text-muted uip-text-center uip-padding-xxs uip-text-center uip-icon" >add</div>\n            </div>\n\t\t\t\t</template>\n\t\t\t</draggable>\n\t    \t\n\t\t</div>'}};