const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{mode:String,insertArea:Array},data:function(){return{loading:!0,categories:[],search:"",strings:{proBlock:__("Pro","uipress-lite"),seachBlocks:__("Search blocks...","uipress-lite")}}},inject:["uipData","router","uipress","uiTemplate"],mounted:function(){this.loading=!1,this.returnGroups},computed:{returnCats(){let e=[];for(let i in this.returnGroups){let t=this.uipData.blocks.filter(e=>e.group==i).sort((e,i)=>e.name.localeCompare(i.name)),n={name:this.returnGroups[i].label,blocks:t};e.push(n)}return e},returnGroups(){return this.uipData.blockGroups}},methods:{setDropAreaClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xxs uip-w-100p",e},clone(e){let i=JSON.parse(JSON.stringify(e));return delete i.path,delete i.args,delete i.category,delete i.description,delete i.path,i.uid=this.uipress.createUID(),i},setDragAreaClasses(){let e=[];return e.class="uip-grid-col-4 uip-grid-gap-xs uip-flex-center",e},componentExists:e=>!!Vue.getCurrentInstance().appContext.app.component(e),insertAtPos(e){"click"==this.mode&&Array.isArray(this.insertArea)&&this.insertArea.push(this.clone(e))},inSearch(e){if(""==this.search)return!0;let i=this.search.toLowerCase();return!!e.name.toLowerCase().includes(i)||!!e.description.toLowerCase().includes(i)}},template:'<div class="">\n        <div class="uip-flex uip-padding-xxs uip-border uip-search-block uip-border-round uip-margin-bottom-s">\n          <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon uip-icon-medium">search</span>\n          <input class="uip-blank-input uip-flex-grow uip-text-s" type="search" :placeholder="strings.seachBlocks" autofocus="" v-model="search">\n        </div>\n        \n          <template v-for="cat in returnCats">\n            <div class="uip-flex uip-cursor-pointer uip-margin-bottom-s uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-bold uip-text-emphasis">{{cat.name}}</div>\n              <div class=" uip-margin-bottom-s uip-flex-wrap uip-flex-row">\n            \n              \n                <draggable \n                  v-model="cat.blocks" \n                  handle=".uip-block-drag"\n                  :component-data="setDragAreaClasses()"\n                  :group="{ name: \'uip-blocks\', pull: \'clone\', put: false, revertClone: true }"\n                  @start="uiTemplate.drag = true" \n                  @end="uiTemplate.drag = false" \n                  ghost-class=""\n                  animation="300"\n                  :sort="false"\n                  :clone="clone"\n                  itemKey="name">\n                    <template #item="{element, index}">\n                  \n                         <div v-if="componentExists(element.moduleName) && inSearch(element)" class="uip-block-item" :block-name="element.name">\n                          <uip-tooltip :message="element.description" :delay="500">\n                            <div @click="insertAtPos(element)" class="uip-border-round uip-padding-xxs hover:uip-background-muted uip-cursor-pointer uip-block-drag uip-no-text-select">\n                              <div class="uip-flex uip-flex-column uip-flex-center">\n                                <div class="uip-icon uip-icon-medium uip-text-xl">\n                                  {{element.icon}}\n                                </div> \n                                <div class="uip-text-center uip-text-s">{{element.name}}</div>\n                              </div>\n                            </div>\n                          </uip-tooltip>\n                        </div>\n                        <div v-else-if="inSearch(element)" class="uip-block-item" :block-name="element.name">\n                          <uip-tooltip :message="element.description" :delay="200">\n                            <div class="uip-border-round uip-padding-xxs hover:uip-background-muted uip-cursor-pointer">\n                              <div class="uip-flex uip-flex-column uip-flex-center">\n                                <div class="uip-icon uip-icon-medium uip-text-xl">\n                                  {{element.icon}}\n                                </div> \n                                <div class="uip-text-center uip-text-xs uip-margin-bottom-xs uip-text-s">{{element.name}}</div>\n                                <div class="uip-text-center uip-text-s uip-flex uip-gap-xxs uip-padding-xxs uip-padding-top-remove uip-padding-bottom-remove uip-background-green-wash uip-text-bold uip-border-round uip-flex-center uip-text-green">\n                                  <div class="uip-icon uip-text-l">redeem</div>\n                                  <div class="">{{strings.proBlock}}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </uip-tooltip>\n                        </div>\n                    \n                    </template>\n                </draggable>\n                \n              \n              </div>\n          </template>\n      </div>'}};