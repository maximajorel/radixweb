const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{inject:["uipData","router","uipress","uiTemplate"],data:function(){return{block:{},uid:this.$route.params.uid,mode:"light",missing:!0,groups:[],loading:!0,options:{},activeTab:!1,buildingSettings:!1,componenetSettings:{},strings:{missingMessage:__("This block no longer exists","uipress-lite"),goBack:__("Go back","uipress-lite"),blockID:__("Block ID","uipress-lite"),proOption:__("This is a pro option. Upgrade to unlock","uipress-lite"),theme:__("Theme","uipress-lite"),options:__("Options","uipress-lite"),buildingSettings:__("Building settings object...","uipress-lite"),blockUniqueID:__("Block unique id. If you change this it must remain unique and can not be blank","uipress-lite"),hiddenOnDevice:__("Hidden on device","uipress-lite"),tooltip:__("Tooltip","uipress-lite"),tooltipMessage:__("Message","uipress-lite"),delay:__("Delay before show","uipress-lite"),styles:__("Styles","uipress-lite"),blockSettings:__("Block options","uipress-lite"),currentlyEditing:__("Currently editing","uipress-lite")},switchOptions:{light:{value:"light",label:__("Light mode","uipress-lite")},dark:{value:"dark",label:__("Dark mode","uipress-lite")}}}},watch:{componenetSettings:{handler(i,e){this.passSettingsToBlock()},deep:!0}},mounted:function(){this.findBlockByUid(),this.setTab(),this.setActiveTabs()},computed:{returnBlock(){return this.block},returnSettings(){return this.componenetSettings},ifBlockExists(){return!JSON.stringify(this.uiTemplate.content).includes(this.uid)},returnBlock(){return this.block}},methods:{passSettingsToBlock(){let i=this;if(!i.uipress.isObject(i.componenetSettings))return;let e=JSON.parse(JSON.stringify(i.componenetSettings));const t={};for(let n in e){let s=e[n];if(t[n]={},t[n].options={},"styleType"in s&&(t[n].styleType=s.styleType),"class"in s&&(t[n].class=s.class),"options"in s)for(let e in s.options)if("value"in s.options[e]||"darkValue"in s.options[e]){let o,p,l,u;"value"in s.options[e]&&(o=s.options[e].value),"darkValue"in s.options[e]&&(p=s.options[e].darkValue),void 0!==o&&(l=i.uipress.isObject(o)?this.clear_empty_values_from_object(o):o),void 0!==p&&(u=i.uipress.isObject(o)?this.clear_empty_values_from_object(p):p),void 0===l&&void 0===u||(t[n].options[e]={},t[n].options[e].settingName=s.options[e].settingName,void 0!==l&&(t[n].options[e].value=l),void 0!==u&&(t[n].options[e].darkValue=u))}}i.uipress.isObject(t)&&(i.block.settings=t)},clear_empty_values_from_object(i){let e=this;for(let t in i){let n=i[t];void 0===n&&delete i[t],""==n&&!1!==n&&0!==n&&"0"!==n&&delete i[t],e.uipress.isObject(n)&&(0===Object.keys(n).length?delete i[t]:(n=e.clear_empty_values_from_object(n),0===Object.keys(i[t]).length&&delete i[t]))}return i},setActiveTabs(){let i=this,e=this.uid,t=this.uiTemplate.content.map(async t=>{let n=await i.checkIfLayerOpen(t,e);if(Array.isArray(n)){if(JSON.stringify(n).includes("true"))return t.tabOpen=!0,!0}else if(n)return t.tabOpen=!0,!0;return n});return Promise.all(t).then(i=>i)},checkIfLayerOpen(i,e){let t=this;if(i.uid==e)return i.tabOpen=!0,!0;if(i.content){let n=i.content.map(async i=>await t.checkIfLayerOpen(i,e));return Promise.all(n).then(e=>(e.includes(!0)&&(i.tabOpen=!0),e))}return!1},setTab(){let i=this.$route.query;i&&i.gn&&(this.activeTab=i.gn)},async build_block_settings(i){let e=this,t=i.moduleName,n=this.uipData.blocks,s=i.settings,o=n.filter(i=>i.moduleName===t);if(o.length<1)return e.missing=!0,e.loading=!1,e.buildingSettings=!1,e.strings.missingMessage=__("This block has no settings","uipress-lite"),!1;let p=JSON.parse(JSON.stringify(o[0].optionsEnabled));for(var l=0;l<p.length;l++){let i=p[l],t=i.name,n={};t in s&&(n=s[t]),e.uipress.format_block_option(i,n,e.componenetSettings)}return!0},findBlockByUid(){let i=this;i.loading=!0,i.missing=!1,i.block=[],i.uipress.searchForBlock(i.uiTemplate.content,i.uid).then(e=>{e?(i.block=e,i.buildingSettings=!0,"tooltip"in i.block||(i.block.tooltip={}),i.build_block_settings(i.block).then(e=>{e&&(i.highLightBlock(i.uid),i.missing=!1,i.buildingSettings=!1,i.loading=!1)})):(i.missing=!0,i.loading=!1)})},highLightBlock(i){if("builder"!=this.uiTemplate.display)return;let e=document.getElementById("uip-ui-preview-area").querySelector("#"+i);this.removeSelectedClasses(),e&&e.classList.add("uip-preview-selected-block")},removeSelectedClasses(){let i=document.getElementsByClassName("uip-preview-selected-block");if(i)for(var e=0;e<i.length;e++)i[e].classList.remove("uip-preview-selected-block")},showTitle(i){return"dark"!=this.mode||1==i.dark},componentExists(i){return!!this.$root._.appContext.components[i]},goBack(){let i=this.$route.params.templateID;this.removeSelectedClasses(),this.router.push("/uibuilder/"+i+"/")},checkIfEmpty(i){let e=i.options;if("dark"!=this.mode)return!0;for(const[i,t]of Object.entries(e))if("dark"in e[i]&&e[i].dark)return!0;return!1},pushActiveTab(i){this.$router.push({query:{gn:i}})},isGroupOpen(i){return this.activeTab==i}},template:'\n        <div v-if="loading" class="uip-padding-m uip-flex uip-flex-center uip-flex-middle "><loading-chart></loading-chart></div>\n        <div v-if="buildingSettings" class="uip-text-muted uip-text-center">{{strings.buildingSettings}}</div>\n\t\t    <div class="uip-flex uip-flex-column uip-h-100p uip-max-h-100p uip-slide-in-right uip-fade-in uip-h-vh uip-position-relative uip-flex-grow" v-if="!missing && !loading">\n          <div class="uip-border-bottom uip-padding-s uip-flex-no-grow uip-flex uip-flex-row uip-flex-between uip-flex-center uip-gap-s">\n            <span @click="goBack()" class=" uip-border-round hover:uip-background-grey uip-cursor-pointer uip-flex uip-flex-middle uip-flex-center uip-ratio-1-1 uip-flex-middle">\n              <span class="uip-icon uip-text-xl uip-line-height-1 uip-icon-medium">chevron_left</span>\n            </span>\n            <div class="uip-flex-grow">\n              <toggle-switch :options="switchOptions" :activeValue="mode" :returnValue="function(data){ mode = data}"></toggle-switch>\n            </div>\n          </div>\n          <div class="uip-padding-s uip-overflow-auto uip-scrollbar">\n            <div class=" uip-margin-bottom-s ">\n\t\t          <div class="uip-flex uip-gap-xs uip-flex-center uip-flex-between">\n                <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                  <input class="uip-text-bold uip-blank-input uip-text-l uip-text-emphasis" v-model="block.name">\n                </div>\n                  <div class="uip-flex uip-flex-row ">\n                  <drop-down dropPos="left">\n                    <template v-slot:trigger>\n                      <span class="uip-padding-xxxs uip-border-round hover:uip-background-grey uip-cursor-pointer uip-flex uip-flex-middle uip-flex-center uip-ratio-1-1 uip-flex-middle">\n                        <span class="uip-icon uip-text-xl uip-line-height-1 uip-icon-medium">more_vert</span>\n                      </span>\n                    </template>\n                    <template v-slot:content>\n                      <div class="uip-flex uip-flex-row uip-gap-xxxs uip-padding-xxs">\n                        <block-actions :block="block" :parentList="[]" :currentIndex="0" :reverse="true" \n                        :disabled="[\'duplicate\',\'settings\']"></block-actions>\n                      </div>\n                    </template>\n                  </drop-down>\n                </div>\n\t\t          </div>\n              <uip-tooltip :message="strings.blockUniqueID" :delay="200">\n                <div class="uip-flex uip-flex-row uip-flex-center">\n                  <div class="uip-text-muted uip-text-xs">#</div>\n                  <input class="uip-blank-input uip-text-muted uip-text-xs uip-padding-remove uip-w-100p" style="color:var(--uip-text-color-muted) !important" v-model="block.uid">\n                </div>\n              </uip-tooltip>\n            </div>\n            \x3c!--BLOCK SETTINGS --\x3e\n            <div class="uip-margin-bottom-xs">\n              <accordion  @click="pushActiveTab(\'block\')" :startOpen="isGroupOpen(\'block\')">\n                <template v-slot:title>\n                    <div class="uip-flex uip-gap-xxs uip-flex-center">\n                      <div class="uip-icon uip-text-l">tune</div>\n                      <div class="">{{strings.blockSettings}}</div>\n                    </div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-xs uip-flex uip-flex-column uip-gap-m">\n                    <div class="">\n                      <div class="uip-margin-bottom-xs uip-text-bold">{{strings.tooltip}}</div>\n                      <div class="uip-grid-col-2">\n                        <div class="">\n                          <div class="uip-text-muted uip-text-s">{{strings.tooltipMessage}}</div>\n                          <textarea v-model="block.tooltip.message" class="uip-input uip-input-small uip-text-s uip-padding-top-remove uip-padding-bottom-remove" rows="1" style="resize: none; line-height:2"></textarea>\n                        </div>\n                        <div class="">\n                          <div class="uip-text-muted uip-text-s">{{strings.delay}}</div>\n                          <input type="number" v-model="block.tooltip.delay" class="uip-input uip-input-small uip-text-s uip-remove-steps" placeholder="200">\n                        </div>\n                      </div>\n                    </div>\n                    <div class="">\n                      <div class="uip-margin-bottom-xs uip-text-bold">{{strings.hiddenOnDevice}}</div>\n                      <hidden-responsive :value="block.responsive" :returnData="function(e){block.responsive = e}"></hidden-responsive>\n                    </div>\n                    <div v-if="returnSettings.block" class="uip-flex uip-flex-column uip-row-gap-m">\n                      <template v-for="option in returnSettings.block.options">\n                        <div>\n                          <div class="uip-margin-bottom-xs uip-text-bold">\n                             {{option.label}}\n                          </div>\n                          <div class="">\n                             <component :is="option.component" :value="option.value" :args="option.args" :returnData="function(data){option.value = data}"></component>\n                          </div>\n                          <div v-if="!componentExists(option.component)" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-s">\n                             {{strings.proOption}}\n                          </div>\n                        </div>\n                      </template>\n                    </div>\n                  </div>\n                </template>\n              </accordion>\n            </div>\n            \x3c!--END BLOCK SETTINGS --\x3e\n            <div class="uip-flex uip-flex-column uip-row-gap-xs uip-margin-bottom-l">\n              <template v-for="(group, index) in returnSettings">\n                <accordion v-if="checkIfEmpty(group) && group.name != \'block\'" @click="pushActiveTab(index)" :startOpen="isGroupOpen(index)">\n                  <template v-slot:title>\n                    <div class="uip-flex uip-gap-xxs">\n                      <span v-if="group.icon" class="uip-icon uip-icon-medium uip-text-l">{{group.icon}}</span>\n                      <div class="uip-flex uip-flex-column uip-row-gap-xxxs ">\n                        <span class="">{{group.label}}</span>\n                        <span v-if="group.class" class="uip-text-muted uip-text-xs">{{group.class}}</span>\n                      </div>\n                    </div>\n                  </template>\n                  \x3c!--CONTENT--\x3e\n                  <template v-slot:content>\n                    <div class="uip-flex uip-flex-column uip-row-gap-xs">\n                      <template v-for="option in group.options">\n                        <div class="uip-padding-xs" v-if="showTitle(option)">\n                          <div class="uip-margin-bottom-xs uip-text-bold">\n                             {{option.label}}\n                          </div>\n                          <div class="">\n                             <component v-if="mode == \'light\'" :is="option.component" :value="option.value" :args="option.args" :returnData="function(data){option.value = data}"></component>\n                             <component v-if="mode == \'dark\' && option.dark == true" :is="option.component" :args="option.args" :value="option.darkValue" :returnData="function(data){option.darkValue = data}"></component>\n                          </div>\n                          <div v-if="!componentExists(option.component)" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-s">\n                             {{strings.proOption}}\n                          </div>\n                        </div>\n                      </template>\n                    </div>\n                    \x3c!--end of options --\x3e\n                  </template>\n                </accordion>\n              </template>\n            </div>\n          </div>\n\t\t    </div>\n        <div v-if="missing" class="uip-padding-s">\n          <div class="uip-background-orange-wash uip-padding-xs uip-border-round  uip-margin-bottom-s">{{strings.missingMessage}}</div>\n          <button class="uip-button-default" @click="goBack">{{strings.goBack}}</button>\n        </div>'}};